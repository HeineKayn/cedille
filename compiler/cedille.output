Useless nonterminals

   Objet


Terminals which are not used

   tFL
   tERROR
   tPRINT
   tFUNC


Useless rules

   52 Objet: tNB


State 34 conflicts: 3 shift/reduce
State 67 conflicts: 1 shift/reduce
State 70 conflicts: 3 reduce/reduce


Grammar

    0 $accept: Functions $end

    1 Functions: FunctionDef Functions
    2          | Main

    3 Main: tMAIN tPO Param tPF Corps

    4 Elem: tNB
    5     | tVAR

    6 Type: tINT
    7     | tCONST

    8 Variables: tVAR
    9          | tVAR tVIR Variables

   10 FunctionCall: tVAR tPO Arg tPF tSTOP

   11 Arg: Elem
   12    | Elem tVIR Arg
   13    | /* empty */

   14 FunctionDef: Type tVAR tPO Param tPF Corps

   15 ElemParam: Type tVAR

   16 Param: ElemParam
   17      | ElemParam tVIR Param
   18      | /* empty */

   19 Corps: tCO Instructions tCF

   20 Instructions: Instruction Instructions
   21             | /* empty */

   22 Instruction: Declaration
   23            | Affectation
   24            | FunctionCall
   25            | Operations
   26            | If
   27            | While
   28            | DeclareAffect

   29 Operations: Operation Operations
   30           | Operation

   31 Operation: Expr
   32          | tVAR tEGAL Expr

   33 Expr: Expr tADD DivMul
   34     | Expr tSOU DivMul
   35     | DivMul

   36 DivMul: DivMul tMUL Terme
   37       | DivMul tDIV Terme
   38       | Terme

   39 Terme: tPO Expr tPF
   40      | tNB

   41 Declaration: Type Variables tSTOP

   42 Affectation: tVAR tEGAL tNB tSTOP
   43            | tVAR tEGAL Operations tSTOP
   44            | tVAR tEGAL tVAR tSTOP

   45 DeclareAffect: Type Affectation

   46 Cond: Elem tEGAL tEGAL Elem
   47     | Elem tNOT tEGAL Elem
   48     | Elem
   49     | tNOT Elem

   50 If: tIF tPO Cond tPF Corps

   51 While: tWHILE tPO Cond tPF Corps


Terminals, with rules where they appear

$end (0) 0
error (256)
tFL (258)
tEGAL (259) 32 42 43 44 46 47
tPO (260) 3 10 14 39 50 51
tPF (261) 3 10 14 39 50 51
tSOU (262) 34
tADD (263) 33
tDIV (264) 37
tMUL (265) 36
tERROR (266)
tPRINT (267)
tNB (268) 4 40 42
tCONST (269) 7
tSTOP (270) 10 41 42 43 44
tVIR (271) 9 12 17
tFUNC (272)
tCO (273) 19
tCF (274) 19
tMAIN (275) 3
tIF (276) 50
tWHILE (277) 51
tNOT (278) 47 49
tINT (279) 6
tVAR (280) 5 8 9 10 14 15 32 42 43 44


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
Functions (27)
    on left: 1 2, on right: 0 1
Main (28)
    on left: 3, on right: 2
Elem (29)
    on left: 4 5, on right: 11 12 46 47 48 49
Type (30)
    on left: 6 7, on right: 14 15 41 45
Variables (31)
    on left: 8 9, on right: 9 41
FunctionCall (32)
    on left: 10, on right: 24
Arg (33)
    on left: 11 12 13, on right: 10 12
FunctionDef (34)
    on left: 14, on right: 1
ElemParam (35)
    on left: 15, on right: 16 17
Param (36)
    on left: 16 17 18, on right: 3 14 17
Corps (37)
    on left: 19, on right: 3 14 50 51
Instructions (38)
    on left: 20 21, on right: 19 20
Instruction (39)
    on left: 22 23 24 25 26 27 28, on right: 20
Operations (40)
    on left: 29 30, on right: 25 29 43
Operation (41)
    on left: 31 32, on right: 29 30
Expr (42)
    on left: 33 34 35, on right: 31 32 33 34 39
DivMul (43)
    on left: 36 37 38, on right: 33 34 35 36 37
Terme (44)
    on left: 39 40, on right: 36 37 38
Declaration (45)
    on left: 41, on right: 22
Affectation (46)
    on left: 42 43 44, on right: 23 45
DeclareAffect (47)
    on left: 45, on right: 28
Cond (48)
    on left: 46 47 48 49, on right: 50 51
If (49)
    on left: 50, on right: 26
While (50)
    on left: 51, on right: 27


state 0

    0 $accept: . Functions $end

    tCONST  shift, and go to state 1
    tMAIN   shift, and go to state 2
    tINT    shift, and go to state 3

    Functions    go to state 4
    Main         go to state 5
    Type         go to state 6
    FunctionDef  go to state 7


state 1

    7 Type: tCONST .

    $default  reduce using rule 7 (Type)


state 2

    3 Main: tMAIN . tPO Param tPF Corps

    tPO  shift, and go to state 8


state 3

    6 Type: tINT .

    $default  reduce using rule 6 (Type)


state 4

    0 $accept: Functions . $end

    $end  shift, and go to state 9


state 5

    2 Functions: Main .

    $default  reduce using rule 2 (Functions)


state 6

   14 FunctionDef: Type . tVAR tPO Param tPF Corps

    tVAR  shift, and go to state 10


state 7

    1 Functions: FunctionDef . Functions

    tCONST  shift, and go to state 1
    tMAIN   shift, and go to state 2
    tINT    shift, and go to state 3

    Functions    go to state 11
    Main         go to state 5
    Type         go to state 6
    FunctionDef  go to state 7


state 8

    3 Main: tMAIN tPO . Param tPF Corps

    tCONST  shift, and go to state 1
    tINT    shift, and go to state 3

    $default  reduce using rule 18 (Param)

    Type       go to state 12
    ElemParam  go to state 13
    Param      go to state 14


state 9

    0 $accept: Functions $end .

    $default  accept


state 10

   14 FunctionDef: Type tVAR . tPO Param tPF Corps

    tPO  shift, and go to state 15


state 11

    1 Functions: FunctionDef Functions .

    $default  reduce using rule 1 (Functions)


state 12

   15 ElemParam: Type . tVAR

    tVAR  shift, and go to state 16


state 13

   16 Param: ElemParam .
   17      | ElemParam . tVIR Param

    tVIR  shift, and go to state 17

    $default  reduce using rule 16 (Param)


state 14

    3 Main: tMAIN tPO Param . tPF Corps

    tPF  shift, and go to state 18


state 15

   14 FunctionDef: Type tVAR tPO . Param tPF Corps

    tCONST  shift, and go to state 1
    tINT    shift, and go to state 3

    $default  reduce using rule 18 (Param)

    Type       go to state 12
    ElemParam  go to state 13
    Param      go to state 19


state 16

   15 ElemParam: Type tVAR .

    $default  reduce using rule 15 (ElemParam)


state 17

   17 Param: ElemParam tVIR . Param

    tCONST  shift, and go to state 1
    tINT    shift, and go to state 3

    $default  reduce using rule 18 (Param)

    Type       go to state 12
    ElemParam  go to state 13
    Param      go to state 20


state 18

    3 Main: tMAIN tPO Param tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 22


state 19

   14 FunctionDef: Type tVAR tPO Param . tPF Corps

    tPF  shift, and go to state 23


state 20

   17 Param: ElemParam tVIR Param .

    $default  reduce using rule 17 (Param)


state 21

   19 Corps: tCO . Instructions tCF

    tPO     shift, and go to state 24
    tNB     shift, and go to state 25
    tCONST  shift, and go to state 1
    tIF     shift, and go to state 26
    tWHILE  shift, and go to state 27
    tINT    shift, and go to state 3
    tVAR    shift, and go to state 28

    $default  reduce using rule 21 (Instructions)

    Type           go to state 29
    FunctionCall   go to state 30
    Instructions   go to state 31
    Instruction    go to state 32
    Operations     go to state 33
    Operation      go to state 34
    Expr           go to state 35
    DivMul         go to state 36
    Terme          go to state 37
    Declaration    go to state 38
    Affectation    go to state 39
    DeclareAffect  go to state 40
    If             go to state 41
    While          go to state 42


state 22

    3 Main: tMAIN tPO Param tPF Corps .

    $default  reduce using rule 3 (Main)


state 23

   14 FunctionDef: Type tVAR tPO Param tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 43


state 24

   39 Terme: tPO . Expr tPF

    tPO  shift, and go to state 24
    tNB  shift, and go to state 25

    Expr    go to state 44
    DivMul  go to state 36
    Terme   go to state 37


state 25

   40 Terme: tNB .

    $default  reduce using rule 40 (Terme)


state 26

   50 If: tIF . tPO Cond tPF Corps

    tPO  shift, and go to state 45


state 27

   51 While: tWHILE . tPO Cond tPF Corps

    tPO  shift, and go to state 46


state 28

   10 FunctionCall: tVAR . tPO Arg tPF tSTOP
   32 Operation: tVAR . tEGAL Expr
   42 Affectation: tVAR . tEGAL tNB tSTOP
   43            | tVAR . tEGAL Operations tSTOP
   44            | tVAR . tEGAL tVAR tSTOP

    tEGAL  shift, and go to state 47
    tPO    shift, and go to state 48


state 29

   41 Declaration: Type . Variables tSTOP
   45 DeclareAffect: Type . Affectation

    tVAR  shift, and go to state 49

    Variables    go to state 50
    Affectation  go to state 51


state 30

   24 Instruction: FunctionCall .

    $default  reduce using rule 24 (Instruction)


state 31

   19 Corps: tCO Instructions . tCF

    tCF  shift, and go to state 52


state 32

   20 Instructions: Instruction . Instructions

    tPO     shift, and go to state 24
    tNB     shift, and go to state 25
    tCONST  shift, and go to state 1
    tIF     shift, and go to state 26
    tWHILE  shift, and go to state 27
    tINT    shift, and go to state 3
    tVAR    shift, and go to state 28

    $default  reduce using rule 21 (Instructions)

    Type           go to state 29
    FunctionCall   go to state 30
    Instructions   go to state 53
    Instruction    go to state 32
    Operations     go to state 33
    Operation      go to state 34
    Expr           go to state 35
    DivMul         go to state 36
    Terme          go to state 37
    Declaration    go to state 38
    Affectation    go to state 39
    DeclareAffect  go to state 40
    If             go to state 41
    While          go to state 42


state 33

   25 Instruction: Operations .

    $default  reduce using rule 25 (Instruction)


state 34

   29 Operations: Operation . Operations
   30           | Operation .

    tPO   shift, and go to state 24
    tNB   shift, and go to state 25
    tVAR  shift, and go to state 54

    tPO       [reduce using rule 30 (Operations)]
    tNB       [reduce using rule 30 (Operations)]
    tVAR      [reduce using rule 30 (Operations)]
    $default  reduce using rule 30 (Operations)

    Operations  go to state 55
    Operation   go to state 34
    Expr        go to state 35
    DivMul      go to state 36
    Terme       go to state 37


state 35

   31 Operation: Expr .
   33 Expr: Expr . tADD DivMul
   34     | Expr . tSOU DivMul

    tSOU  shift, and go to state 56
    tADD  shift, and go to state 57

    $default  reduce using rule 31 (Operation)


state 36

   35 Expr: DivMul .
   36 DivMul: DivMul . tMUL Terme
   37       | DivMul . tDIV Terme

    tDIV  shift, and go to state 58
    tMUL  shift, and go to state 59

    $default  reduce using rule 35 (Expr)


state 37

   38 DivMul: Terme .

    $default  reduce using rule 38 (DivMul)


state 38

   22 Instruction: Declaration .

    $default  reduce using rule 22 (Instruction)


state 39

   23 Instruction: Affectation .

    $default  reduce using rule 23 (Instruction)


state 40

   28 Instruction: DeclareAffect .

    $default  reduce using rule 28 (Instruction)


state 41

   26 Instruction: If .

    $default  reduce using rule 26 (Instruction)


state 42

   27 Instruction: While .

    $default  reduce using rule 27 (Instruction)


state 43

   14 FunctionDef: Type tVAR tPO Param tPF Corps .

    $default  reduce using rule 14 (FunctionDef)


state 44

   33 Expr: Expr . tADD DivMul
   34     | Expr . tSOU DivMul
   39 Terme: tPO Expr . tPF

    tPF   shift, and go to state 60
    tSOU  shift, and go to state 56
    tADD  shift, and go to state 57


state 45

   50 If: tIF tPO . Cond tPF Corps

    tNB   shift, and go to state 61
    tNOT  shift, and go to state 62
    tVAR  shift, and go to state 63

    Elem  go to state 64
    Cond  go to state 65


state 46

   51 While: tWHILE tPO . Cond tPF Corps

    tNB   shift, and go to state 61
    tNOT  shift, and go to state 62
    tVAR  shift, and go to state 63

    Elem  go to state 64
    Cond  go to state 66


state 47

   32 Operation: tVAR tEGAL . Expr
   42 Affectation: tVAR tEGAL . tNB tSTOP
   43            | tVAR tEGAL . Operations tSTOP
   44            | tVAR tEGAL . tVAR tSTOP

    tPO   shift, and go to state 24
    tNB   shift, and go to state 67
    tVAR  shift, and go to state 68

    Operations  go to state 69
    Operation   go to state 34
    Expr        go to state 70
    DivMul      go to state 36
    Terme       go to state 37


state 48

   10 FunctionCall: tVAR tPO . Arg tPF tSTOP

    tNB   shift, and go to state 61
    tVAR  shift, and go to state 63

    $default  reduce using rule 13 (Arg)

    Elem  go to state 71
    Arg   go to state 72


state 49

    8 Variables: tVAR .
    9          | tVAR . tVIR Variables
   42 Affectation: tVAR . tEGAL tNB tSTOP
   43            | tVAR . tEGAL Operations tSTOP
   44            | tVAR . tEGAL tVAR tSTOP

    tEGAL  shift, and go to state 73
    tVIR   shift, and go to state 74

    $default  reduce using rule 8 (Variables)


state 50

   41 Declaration: Type Variables . tSTOP

    tSTOP  shift, and go to state 75


state 51

   45 DeclareAffect: Type Affectation .

    $default  reduce using rule 45 (DeclareAffect)


state 52

   19 Corps: tCO Instructions tCF .

    $default  reduce using rule 19 (Corps)


state 53

   20 Instructions: Instruction Instructions .

    $default  reduce using rule 20 (Instructions)


state 54

   32 Operation: tVAR . tEGAL Expr

    tEGAL  shift, and go to state 76


state 55

   29 Operations: Operation Operations .

    $default  reduce using rule 29 (Operations)


state 56

   34 Expr: Expr tSOU . DivMul

    tPO  shift, and go to state 24
    tNB  shift, and go to state 25

    DivMul  go to state 77
    Terme   go to state 37


state 57

   33 Expr: Expr tADD . DivMul

    tPO  shift, and go to state 24
    tNB  shift, and go to state 25

    DivMul  go to state 78
    Terme   go to state 37


state 58

   37 DivMul: DivMul tDIV . Terme

    tPO  shift, and go to state 24
    tNB  shift, and go to state 25

    Terme  go to state 79


state 59

   36 DivMul: DivMul tMUL . Terme

    tPO  shift, and go to state 24
    tNB  shift, and go to state 25

    Terme  go to state 80


state 60

   39 Terme: tPO Expr tPF .

    $default  reduce using rule 39 (Terme)


state 61

    4 Elem: tNB .

    $default  reduce using rule 4 (Elem)


state 62

   49 Cond: tNOT . Elem

    tNB   shift, and go to state 61
    tVAR  shift, and go to state 63

    Elem  go to state 81


state 63

    5 Elem: tVAR .

    $default  reduce using rule 5 (Elem)


state 64

   46 Cond: Elem . tEGAL tEGAL Elem
   47     | Elem . tNOT tEGAL Elem
   48     | Elem .

    tEGAL  shift, and go to state 82
    tNOT   shift, and go to state 83

    $default  reduce using rule 48 (Cond)


state 65

   50 If: tIF tPO Cond . tPF Corps

    tPF  shift, and go to state 84


state 66

   51 While: tWHILE tPO Cond . tPF Corps

    tPF  shift, and go to state 85


state 67

   40 Terme: tNB .
   42 Affectation: tVAR tEGAL tNB . tSTOP

    tSTOP  shift, and go to state 86

    tSTOP     [reduce using rule 40 (Terme)]
    $default  reduce using rule 40 (Terme)


state 68

   32 Operation: tVAR . tEGAL Expr
   44 Affectation: tVAR tEGAL tVAR . tSTOP

    tEGAL  shift, and go to state 76
    tSTOP  shift, and go to state 87


state 69

   43 Affectation: tVAR tEGAL Operations . tSTOP

    tSTOP  shift, and go to state 88


state 70

   31 Operation: Expr .
   32          | tVAR tEGAL Expr .
   33 Expr: Expr . tADD DivMul
   34     | Expr . tSOU DivMul

    tSOU  shift, and go to state 56
    tADD  shift, and go to state 57

    tPO       reduce using rule 31 (Operation)
    tPO       [reduce using rule 32 (Operation)]
    tNB       reduce using rule 31 (Operation)
    tNB       [reduce using rule 32 (Operation)]
    tSTOP     reduce using rule 31 (Operation)
    tVAR      reduce using rule 31 (Operation)
    tVAR      [reduce using rule 32 (Operation)]
    $default  reduce using rule 32 (Operation)


state 71

   11 Arg: Elem .
   12    | Elem . tVIR Arg

    tVIR  shift, and go to state 89

    $default  reduce using rule 11 (Arg)


state 72

   10 FunctionCall: tVAR tPO Arg . tPF tSTOP

    tPF  shift, and go to state 90


state 73

   42 Affectation: tVAR tEGAL . tNB tSTOP
   43            | tVAR tEGAL . Operations tSTOP
   44            | tVAR tEGAL . tVAR tSTOP

    tPO   shift, and go to state 24
    tNB   shift, and go to state 67
    tVAR  shift, and go to state 68

    Operations  go to state 69
    Operation   go to state 34
    Expr        go to state 35
    DivMul      go to state 36
    Terme       go to state 37


state 74

    9 Variables: tVAR tVIR . Variables

    tVAR  shift, and go to state 91

    Variables  go to state 92


state 75

   41 Declaration: Type Variables tSTOP .

    $default  reduce using rule 41 (Declaration)


state 76

   32 Operation: tVAR tEGAL . Expr

    tPO  shift, and go to state 24
    tNB  shift, and go to state 25

    Expr    go to state 93
    DivMul  go to state 36
    Terme   go to state 37


state 77

   34 Expr: Expr tSOU DivMul .
   36 DivMul: DivMul . tMUL Terme
   37       | DivMul . tDIV Terme

    tDIV  shift, and go to state 58
    tMUL  shift, and go to state 59

    $default  reduce using rule 34 (Expr)


state 78

   33 Expr: Expr tADD DivMul .
   36 DivMul: DivMul . tMUL Terme
   37       | DivMul . tDIV Terme

    tDIV  shift, and go to state 58
    tMUL  shift, and go to state 59

    $default  reduce using rule 33 (Expr)


state 79

   37 DivMul: DivMul tDIV Terme .

    $default  reduce using rule 37 (DivMul)


state 80

   36 DivMul: DivMul tMUL Terme .

    $default  reduce using rule 36 (DivMul)


state 81

   49 Cond: tNOT Elem .

    $default  reduce using rule 49 (Cond)


state 82

   46 Cond: Elem tEGAL . tEGAL Elem

    tEGAL  shift, and go to state 94


state 83

   47 Cond: Elem tNOT . tEGAL Elem

    tEGAL  shift, and go to state 95


state 84

   50 If: tIF tPO Cond tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 96


state 85

   51 While: tWHILE tPO Cond tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 97


state 86

   42 Affectation: tVAR tEGAL tNB tSTOP .

    $default  reduce using rule 42 (Affectation)


state 87

   44 Affectation: tVAR tEGAL tVAR tSTOP .

    $default  reduce using rule 44 (Affectation)


state 88

   43 Affectation: tVAR tEGAL Operations tSTOP .

    $default  reduce using rule 43 (Affectation)


state 89

   12 Arg: Elem tVIR . Arg

    tNB   shift, and go to state 61
    tVAR  shift, and go to state 63

    $default  reduce using rule 13 (Arg)

    Elem  go to state 71
    Arg   go to state 98


state 90

   10 FunctionCall: tVAR tPO Arg tPF . tSTOP

    tSTOP  shift, and go to state 99


state 91

    8 Variables: tVAR .
    9          | tVAR . tVIR Variables

    tVIR  shift, and go to state 74

    $default  reduce using rule 8 (Variables)


state 92

    9 Variables: tVAR tVIR Variables .

    $default  reduce using rule 9 (Variables)


state 93

   32 Operation: tVAR tEGAL Expr .
   33 Expr: Expr . tADD DivMul
   34     | Expr . tSOU DivMul

    tSOU  shift, and go to state 56
    tADD  shift, and go to state 57

    $default  reduce using rule 32 (Operation)


state 94

   46 Cond: Elem tEGAL tEGAL . Elem

    tNB   shift, and go to state 61
    tVAR  shift, and go to state 63

    Elem  go to state 100


state 95

   47 Cond: Elem tNOT tEGAL . Elem

    tNB   shift, and go to state 61
    tVAR  shift, and go to state 63

    Elem  go to state 101


state 96

   50 If: tIF tPO Cond tPF Corps .

    $default  reduce using rule 50 (If)


state 97

   51 While: tWHILE tPO Cond tPF Corps .

    $default  reduce using rule 51 (While)


state 98

   12 Arg: Elem tVIR Arg .

    $default  reduce using rule 12 (Arg)


state 99

   10 FunctionCall: tVAR tPO Arg tPF tSTOP .

    $default  reduce using rule 10 (FunctionCall)


state 100

   46 Cond: Elem tEGAL tEGAL Elem .

    $default  reduce using rule 46 (Cond)


state 101

   47 Cond: Elem tNOT tEGAL Elem .

    $default  reduce using rule 47 (Cond)

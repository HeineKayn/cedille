Useless nonterminals

   Objet


Terminals which are not used

   tFL
   tERROR
   tPRINT


Useless rules

   49 Objet: tNB


State 35 conflicts: 3 shift/reduce
State 60 conflicts: 1 shift/reduce
State 62 conflicts: 3 reduce/reduce


Grammar

    0 $accept: Functions $end

    1 Functions: FunctionDef Functions
    2          | Main

    3 Main: tMAIN tPO Param tPF Corps

    4 Elem: tNB
    5     | tVAR

    6 Type: tINT
    7     | tCONST

    8 Variables: tVAR
    9          | tVAR tVIR Variables

   10 FunctionCall: tFUNC tPO Arg tPF tSTOP

   11 Arg: Elem
   12    | Elem tVIR Arg
   13    | /* empty */

   14 FunctionDef: Type tFUNC tPO Param tPF Corps

   15 ElemParam: Type tVAR

   16 Param: ElemParam
   17      | ElemParam tVIR Param
   18      | /* empty */

   19 Corps: tCO Instructions tCF

   20 Instructions: Instruction Instructions
   21             | /* empty */

   22 Instruction: Declaration
   23            | Affectation
   24            | FunctionCall
   25            | Operations
   26            | If
   27            | While

   28 Operations: Operation Operations
   29           | Operation

   30 Operation: Expr
   31          | tVAR tEGAL Expr

   32 Expr: Expr tADD DivMul
   33     | Expr tSOU DivMul
   34     | DivMul

   35 DivMul: DivMul tMUL Terme
   36       | DivMul tDIV Terme
   37       | Terme

   38 Terme: tPO Expr tPF
   39      | tNB

   40 Declaration: Type Variables tSTOP

   41 Affectation: tVAR tEGAL tNB tSTOP
   42            | tVAR tEGAL Operations tSTOP

   43 Cond: Elem tEGAL tEGAL Elem
   44     | Elem tNOT tEGAL Elem
   45     | Elem
   46     | tNOT Elem

   47 If: tIF tPO Cond tPF Corps

   48 While: tWHILE tPO Cond tPF Corps


Terminals, with rules where they appear

$end (0) 0
error (256)
tINT (258) 6
tFL (259)
tEGAL (260) 31 41 42 43 44
tPO (261) 3 10 14 38 47 48
tPF (262) 3 10 14 38 47 48
tSOU (263) 33
tADD (264) 32
tDIV (265) 36
tMUL (266) 35
tERROR (267)
tPRINT (268)
tVAR (269) 5 8 9 15 31 41 42
tNB (270) 4 39 41
tCONST (271) 7
tSTOP (272) 10 40 41 42
tVIR (273) 9 12 17
tFUNC (274) 10 14
tCO (275) 19
tCF (276) 19
tMAIN (277) 3
tIF (278) 47
tWHILE (279) 48
tNOT (280) 44 46


Nonterminals, with rules where they appear

$accept (26)
    on left: 0
Functions (27)
    on left: 1 2, on right: 0 1
Main (28)
    on left: 3, on right: 2
Elem (29)
    on left: 4 5, on right: 11 12 43 44 45 46
Type (30)
    on left: 6 7, on right: 14 15 40
Variables (31)
    on left: 8 9, on right: 9 40
FunctionCall (32)
    on left: 10, on right: 24
Arg (33)
    on left: 11 12 13, on right: 10 12
FunctionDef (34)
    on left: 14, on right: 1
ElemParam (35)
    on left: 15, on right: 16 17
Param (36)
    on left: 16 17 18, on right: 3 14 17
Corps (37)
    on left: 19, on right: 3 14 47 48
Instructions (38)
    on left: 20 21, on right: 19 20
Instruction (39)
    on left: 22 23 24 25 26 27, on right: 20
Operations (40)
    on left: 28 29, on right: 25 28 42
Operation (41)
    on left: 30 31, on right: 28 29
Expr (42)
    on left: 32 33 34, on right: 30 31 32 33 38
DivMul (43)
    on left: 35 36 37, on right: 32 33 34 35 36
Terme (44)
    on left: 38 39, on right: 35 36 37
Declaration (45)
    on left: 40, on right: 22
Affectation (46)
    on left: 41 42, on right: 23
Cond (47)
    on left: 43 44 45 46, on right: 47 48
If (48)
    on left: 47, on right: 26
While (49)
    on left: 48, on right: 27


state 0

    0 $accept: . Functions $end

    tINT    shift, and go to state 1
    tCONST  shift, and go to state 2
    tMAIN   shift, and go to state 3

    Functions    go to state 4
    Main         go to state 5
    Type         go to state 6
    FunctionDef  go to state 7


state 1

    6 Type: tINT .

    $default  reduce using rule 6 (Type)


state 2

    7 Type: tCONST .

    $default  reduce using rule 7 (Type)


state 3

    3 Main: tMAIN . tPO Param tPF Corps

    tPO  shift, and go to state 8


state 4

    0 $accept: Functions . $end

    $end  shift, and go to state 9


state 5

    2 Functions: Main .

    $default  reduce using rule 2 (Functions)


state 6

   14 FunctionDef: Type . tFUNC tPO Param tPF Corps

    tFUNC  shift, and go to state 10


state 7

    1 Functions: FunctionDef . Functions

    tINT    shift, and go to state 1
    tCONST  shift, and go to state 2
    tMAIN   shift, and go to state 3

    Functions    go to state 11
    Main         go to state 5
    Type         go to state 6
    FunctionDef  go to state 7


state 8

    3 Main: tMAIN tPO . Param tPF Corps

    tINT    shift, and go to state 1
    tCONST  shift, and go to state 2

    $default  reduce using rule 18 (Param)

    Type       go to state 12
    ElemParam  go to state 13
    Param      go to state 14


state 9

    0 $accept: Functions $end .

    $default  accept


state 10

   14 FunctionDef: Type tFUNC . tPO Param tPF Corps

    tPO  shift, and go to state 15


state 11

    1 Functions: FunctionDef Functions .

    $default  reduce using rule 1 (Functions)


state 12

   15 ElemParam: Type . tVAR

    tVAR  shift, and go to state 16


state 13

   16 Param: ElemParam .
   17      | ElemParam . tVIR Param

    tVIR  shift, and go to state 17

    $default  reduce using rule 16 (Param)


state 14

    3 Main: tMAIN tPO Param . tPF Corps

    tPF  shift, and go to state 18


state 15

   14 FunctionDef: Type tFUNC tPO . Param tPF Corps

    tINT    shift, and go to state 1
    tCONST  shift, and go to state 2

    $default  reduce using rule 18 (Param)

    Type       go to state 12
    ElemParam  go to state 13
    Param      go to state 19


state 16

   15 ElemParam: Type tVAR .

    $default  reduce using rule 15 (ElemParam)


state 17

   17 Param: ElemParam tVIR . Param

    tINT    shift, and go to state 1
    tCONST  shift, and go to state 2

    $default  reduce using rule 18 (Param)

    Type       go to state 12
    ElemParam  go to state 13
    Param      go to state 20


state 18

    3 Main: tMAIN tPO Param tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 22


state 19

   14 FunctionDef: Type tFUNC tPO Param . tPF Corps

    tPF  shift, and go to state 23


state 20

   17 Param: ElemParam tVIR Param .

    $default  reduce using rule 17 (Param)


state 21

   19 Corps: tCO . Instructions tCF

    tINT    shift, and go to state 1
    tPO     shift, and go to state 24
    tVAR    shift, and go to state 25
    tNB     shift, and go to state 26
    tCONST  shift, and go to state 2
    tFUNC   shift, and go to state 27
    tIF     shift, and go to state 28
    tWHILE  shift, and go to state 29

    $default  reduce using rule 21 (Instructions)

    Type          go to state 30
    FunctionCall  go to state 31
    Instructions  go to state 32
    Instruction   go to state 33
    Operations    go to state 34
    Operation     go to state 35
    Expr          go to state 36
    DivMul        go to state 37
    Terme         go to state 38
    Declaration   go to state 39
    Affectation   go to state 40
    If            go to state 41
    While         go to state 42


state 22

    3 Main: tMAIN tPO Param tPF Corps .

    $default  reduce using rule 3 (Main)


state 23

   14 FunctionDef: Type tFUNC tPO Param tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 43


state 24

   38 Terme: tPO . Expr tPF

    tPO  shift, and go to state 24
    tNB  shift, and go to state 26

    Expr    go to state 44
    DivMul  go to state 37
    Terme   go to state 38


state 25

   31 Operation: tVAR . tEGAL Expr
   41 Affectation: tVAR . tEGAL tNB tSTOP
   42            | tVAR . tEGAL Operations tSTOP

    tEGAL  shift, and go to state 45


state 26

   39 Terme: tNB .

    $default  reduce using rule 39 (Terme)


state 27

   10 FunctionCall: tFUNC . tPO Arg tPF tSTOP

    tPO  shift, and go to state 46


state 28

   47 If: tIF . tPO Cond tPF Corps

    tPO  shift, and go to state 47


state 29

   48 While: tWHILE . tPO Cond tPF Corps

    tPO  shift, and go to state 48


state 30

   40 Declaration: Type . Variables tSTOP

    tVAR  shift, and go to state 49

    Variables  go to state 50


state 31

   24 Instruction: FunctionCall .

    $default  reduce using rule 24 (Instruction)


state 32

   19 Corps: tCO Instructions . tCF

    tCF  shift, and go to state 51


state 33

   20 Instructions: Instruction . Instructions

    tINT    shift, and go to state 1
    tPO     shift, and go to state 24
    tVAR    shift, and go to state 25
    tNB     shift, and go to state 26
    tCONST  shift, and go to state 2
    tFUNC   shift, and go to state 27
    tIF     shift, and go to state 28
    tWHILE  shift, and go to state 29

    $default  reduce using rule 21 (Instructions)

    Type          go to state 30
    FunctionCall  go to state 31
    Instructions  go to state 52
    Instruction   go to state 33
    Operations    go to state 34
    Operation     go to state 35
    Expr          go to state 36
    DivMul        go to state 37
    Terme         go to state 38
    Declaration   go to state 39
    Affectation   go to state 40
    If            go to state 41
    While         go to state 42


state 34

   25 Instruction: Operations .

    $default  reduce using rule 25 (Instruction)


state 35

   28 Operations: Operation . Operations
   29           | Operation .

    tPO   shift, and go to state 24
    tVAR  shift, and go to state 53
    tNB   shift, and go to state 26

    tPO       [reduce using rule 29 (Operations)]
    tVAR      [reduce using rule 29 (Operations)]
    tNB       [reduce using rule 29 (Operations)]
    $default  reduce using rule 29 (Operations)

    Operations  go to state 54
    Operation   go to state 35
    Expr        go to state 36
    DivMul      go to state 37
    Terme       go to state 38


state 36

   30 Operation: Expr .
   32 Expr: Expr . tADD DivMul
   33     | Expr . tSOU DivMul

    tSOU  shift, and go to state 55
    tADD  shift, and go to state 56

    $default  reduce using rule 30 (Operation)


state 37

   34 Expr: DivMul .
   35 DivMul: DivMul . tMUL Terme
   36       | DivMul . tDIV Terme

    tDIV  shift, and go to state 57
    tMUL  shift, and go to state 58

    $default  reduce using rule 34 (Expr)


state 38

   37 DivMul: Terme .

    $default  reduce using rule 37 (DivMul)


state 39

   22 Instruction: Declaration .

    $default  reduce using rule 22 (Instruction)


state 40

   23 Instruction: Affectation .

    $default  reduce using rule 23 (Instruction)


state 41

   26 Instruction: If .

    $default  reduce using rule 26 (Instruction)


state 42

   27 Instruction: While .

    $default  reduce using rule 27 (Instruction)


state 43

   14 FunctionDef: Type tFUNC tPO Param tPF Corps .

    $default  reduce using rule 14 (FunctionDef)


state 44

   32 Expr: Expr . tADD DivMul
   33     | Expr . tSOU DivMul
   38 Terme: tPO Expr . tPF

    tPF   shift, and go to state 59
    tSOU  shift, and go to state 55
    tADD  shift, and go to state 56


state 45

   31 Operation: tVAR tEGAL . Expr
   41 Affectation: tVAR tEGAL . tNB tSTOP
   42            | tVAR tEGAL . Operations tSTOP

    tPO   shift, and go to state 24
    tVAR  shift, and go to state 53
    tNB   shift, and go to state 60

    Operations  go to state 61
    Operation   go to state 35
    Expr        go to state 62
    DivMul      go to state 37
    Terme       go to state 38


state 46

   10 FunctionCall: tFUNC tPO . Arg tPF tSTOP

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64

    $default  reduce using rule 13 (Arg)

    Elem  go to state 65
    Arg   go to state 66


state 47

   47 If: tIF tPO . Cond tPF Corps

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64
    tNOT  shift, and go to state 67

    Elem  go to state 68
    Cond  go to state 69


state 48

   48 While: tWHILE tPO . Cond tPF Corps

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64
    tNOT  shift, and go to state 67

    Elem  go to state 68
    Cond  go to state 70


state 49

    8 Variables: tVAR .
    9          | tVAR . tVIR Variables

    tVIR  shift, and go to state 71

    $default  reduce using rule 8 (Variables)


state 50

   40 Declaration: Type Variables . tSTOP

    tSTOP  shift, and go to state 72


state 51

   19 Corps: tCO Instructions tCF .

    $default  reduce using rule 19 (Corps)


state 52

   20 Instructions: Instruction Instructions .

    $default  reduce using rule 20 (Instructions)


state 53

   31 Operation: tVAR . tEGAL Expr

    tEGAL  shift, and go to state 73


state 54

   28 Operations: Operation Operations .

    $default  reduce using rule 28 (Operations)


state 55

   33 Expr: Expr tSOU . DivMul

    tPO  shift, and go to state 24
    tNB  shift, and go to state 26

    DivMul  go to state 74
    Terme   go to state 38


state 56

   32 Expr: Expr tADD . DivMul

    tPO  shift, and go to state 24
    tNB  shift, and go to state 26

    DivMul  go to state 75
    Terme   go to state 38


state 57

   36 DivMul: DivMul tDIV . Terme

    tPO  shift, and go to state 24
    tNB  shift, and go to state 26

    Terme  go to state 76


state 58

   35 DivMul: DivMul tMUL . Terme

    tPO  shift, and go to state 24
    tNB  shift, and go to state 26

    Terme  go to state 77


state 59

   38 Terme: tPO Expr tPF .

    $default  reduce using rule 38 (Terme)


state 60

   39 Terme: tNB .
   41 Affectation: tVAR tEGAL tNB . tSTOP

    tSTOP  shift, and go to state 78

    tSTOP     [reduce using rule 39 (Terme)]
    $default  reduce using rule 39 (Terme)


state 61

   42 Affectation: tVAR tEGAL Operations . tSTOP

    tSTOP  shift, and go to state 79


state 62

   30 Operation: Expr .
   31          | tVAR tEGAL Expr .
   32 Expr: Expr . tADD DivMul
   33     | Expr . tSOU DivMul

    tSOU  shift, and go to state 55
    tADD  shift, and go to state 56

    tPO       reduce using rule 30 (Operation)
    tPO       [reduce using rule 31 (Operation)]
    tVAR      reduce using rule 30 (Operation)
    tVAR      [reduce using rule 31 (Operation)]
    tNB       reduce using rule 30 (Operation)
    tNB       [reduce using rule 31 (Operation)]
    tSTOP     reduce using rule 30 (Operation)
    $default  reduce using rule 31 (Operation)


state 63

    5 Elem: tVAR .

    $default  reduce using rule 5 (Elem)


state 64

    4 Elem: tNB .

    $default  reduce using rule 4 (Elem)


state 65

   11 Arg: Elem .
   12    | Elem . tVIR Arg

    tVIR  shift, and go to state 80

    $default  reduce using rule 11 (Arg)


state 66

   10 FunctionCall: tFUNC tPO Arg . tPF tSTOP

    tPF  shift, and go to state 81


state 67

   46 Cond: tNOT . Elem

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64

    Elem  go to state 82


state 68

   43 Cond: Elem . tEGAL tEGAL Elem
   44     | Elem . tNOT tEGAL Elem
   45     | Elem .

    tEGAL  shift, and go to state 83
    tNOT   shift, and go to state 84

    $default  reduce using rule 45 (Cond)


state 69

   47 If: tIF tPO Cond . tPF Corps

    tPF  shift, and go to state 85


state 70

   48 While: tWHILE tPO Cond . tPF Corps

    tPF  shift, and go to state 86


state 71

    9 Variables: tVAR tVIR . Variables

    tVAR  shift, and go to state 49

    Variables  go to state 87


state 72

   40 Declaration: Type Variables tSTOP .

    $default  reduce using rule 40 (Declaration)


state 73

   31 Operation: tVAR tEGAL . Expr

    tPO  shift, and go to state 24
    tNB  shift, and go to state 26

    Expr    go to state 88
    DivMul  go to state 37
    Terme   go to state 38


state 74

   33 Expr: Expr tSOU DivMul .
   35 DivMul: DivMul . tMUL Terme
   36       | DivMul . tDIV Terme

    tDIV  shift, and go to state 57
    tMUL  shift, and go to state 58

    $default  reduce using rule 33 (Expr)


state 75

   32 Expr: Expr tADD DivMul .
   35 DivMul: DivMul . tMUL Terme
   36       | DivMul . tDIV Terme

    tDIV  shift, and go to state 57
    tMUL  shift, and go to state 58

    $default  reduce using rule 32 (Expr)


state 76

   36 DivMul: DivMul tDIV Terme .

    $default  reduce using rule 36 (DivMul)


state 77

   35 DivMul: DivMul tMUL Terme .

    $default  reduce using rule 35 (DivMul)


state 78

   41 Affectation: tVAR tEGAL tNB tSTOP .

    $default  reduce using rule 41 (Affectation)


state 79

   42 Affectation: tVAR tEGAL Operations tSTOP .

    $default  reduce using rule 42 (Affectation)


state 80

   12 Arg: Elem tVIR . Arg

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64

    $default  reduce using rule 13 (Arg)

    Elem  go to state 65
    Arg   go to state 89


state 81

   10 FunctionCall: tFUNC tPO Arg tPF . tSTOP

    tSTOP  shift, and go to state 90


state 82

   46 Cond: tNOT Elem .

    $default  reduce using rule 46 (Cond)


state 83

   43 Cond: Elem tEGAL . tEGAL Elem

    tEGAL  shift, and go to state 91


state 84

   44 Cond: Elem tNOT . tEGAL Elem

    tEGAL  shift, and go to state 92


state 85

   47 If: tIF tPO Cond tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 93


state 86

   48 While: tWHILE tPO Cond tPF . Corps

    tCO  shift, and go to state 21

    Corps  go to state 94


state 87

    9 Variables: tVAR tVIR Variables .

    $default  reduce using rule 9 (Variables)


state 88

   31 Operation: tVAR tEGAL Expr .
   32 Expr: Expr . tADD DivMul
   33     | Expr . tSOU DivMul

    tSOU  shift, and go to state 55
    tADD  shift, and go to state 56

    $default  reduce using rule 31 (Operation)


state 89

   12 Arg: Elem tVIR Arg .

    $default  reduce using rule 12 (Arg)


state 90

   10 FunctionCall: tFUNC tPO Arg tPF tSTOP .

    $default  reduce using rule 10 (FunctionCall)


state 91

   43 Cond: Elem tEGAL tEGAL . Elem

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64

    Elem  go to state 95


state 92

   44 Cond: Elem tNOT tEGAL . Elem

    tVAR  shift, and go to state 63
    tNB   shift, and go to state 64

    Elem  go to state 96


state 93

   47 If: tIF tPO Cond tPF Corps .

    $default  reduce using rule 47 (If)


state 94

   48 While: tWHILE tPO Cond tPF Corps .

    $default  reduce using rule 48 (While)


state 95

   43 Cond: Elem tEGAL tEGAL Elem .

    $default  reduce using rule 43 (Cond)


state 96

   44 Cond: Elem tNOT tEGAL Elem .

    $default  reduce using rule 44 (Cond)
